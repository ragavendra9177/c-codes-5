#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_STUDENTS 100

struct Student {
    int id;
    char name[50];
    int age;
    float grade;
};

struct Student students[MAX_STUDENTS];
int studentCount = 0;

void clearInputBuffer() {
    int c;
    while ((c = getchar()) != '\n' && c != EOF);
}

void addStudent() {
    if (studentCount >= MAX_STUDENTS) {
        printf("Student database is full!\n");
        return;
    }

    struct Student s;

    printf("Enter student ID: ");
    if (scanf("%d", &s.id) != 1) {
        printf("Invalid ID input!\n");
        clearInputBuffer();
        return;
    }
    clearInputBuffer();

    printf("Enter student name: ");
    fgets(s.name, sizeof(s.name), stdin);
    s.name[strcspn(s.name, "\n")] = 0;

    printf("Enter student age: ");
    if (scanf("%d", &s.age) != 1) {
        printf("Invalid age input!\n");
        clearInputBuffer();
        return;
    }
    clearInputBuffer();

    printf("Enter student grade: ");
    if (scanf("%f", &s.grade) != 1) {
        printf("Invalid grade input!\n");
        clearInputBuffer();
        return;
    }
    clearInputBuffer();

    students[studentCount++] = s;
    printf("Student added successfully!\n");
}

void displayStudents() {
    if (studentCount == 0) {
        printf("No students in the database!\n");
        return;
    }

    printf("ID\tName\t\tAge\tGrade\n");
    printf("-------------------------------------------\n");
    for (int i = 0; i < studentCount; i++) {
        printf("%d\t%s\t\t%d\t%.2f\n", students[i].id, students[i].name, students[i].age, students[i].grade);
    }
}

void searchSt
